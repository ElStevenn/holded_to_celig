version: '3.8'

services:
  app:
    build: .
    container_name: app_service
    restart: always
    depends_on:
      - redis
      - celery_worker
      - celery_beat
    networks:
      - holded_celig_network
    volumes:
      - app_data:/app/data
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  redis:
    image: redis:latest
    container_name: redis_service
    restart: unless-stopped
    networks:
      - holded_celig_network
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    command:
      - redis-server
      - --appendonly yes
      - --dir /data
      - --bind 0.0.0.0

  celery_worker:
    build: .
    container_name: celery_worker
    restart: unless-stopped
    networks:
      - holded_celig_network
    volumes:
      - celery_worker_data:/app/celery_worker/data
    depends_on:
      - redis
    command: celery -A config.celery_config worker --loglevel=info

  celery_beat:
    build: .
    container_name: celery_beat
    restart: unless-stopped
    depends_on:
      - redis
      - celery_worker
    networks:
      - holded_celig_network
    volumes:
      - celery_beat_data:/app/celery_beat/data
    command: celery -A config.celery_config beat --loglevel=info

networks:
  holded_celig_network:
    driver: bridge

volumes:
  app_data:
  redis_data:
  celery_worker_data:
  celery_beat_data:
